@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@ignore = "true"
	@priority = "4"
	test CheckDefaultStructureTitleDisplayedOnStructureList {
		property portal.acceptance = "false";

		// TODO LPS-123536 CheckDefaultStructureTitleDisplayedOnStructureList pending implementation

	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "4"
	test CheckLanguageSelector {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Test",
			structureName = "Test Structure");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric",
			targetFieldLabel = "Text");

		WebContentStructures.saveCP();

		LexiconEntry.gotoEntry(rowEntry = "Test Structure");

		Click.clickNoMouseOver(locator1 = "Button#LOCALIZATION_GENERIC");

		AssertElementPresent(
			key_locale = "en_US",
			locator1 = "Translation#LOCALIZATION_NAME",
			value1 = "lexicon-icon-en-us");

		AssertElementPresent(
			key_locale = "en_US",
			locator1 = "Translation#LOCALIZATION_NAME",
			value1 = "Default");
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "5"
	test CheckLocalizationOfStructureUponLanguageChange {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric",
			targetFieldLabel = "Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Text",
			fieldHelp = "Text Field Help Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Numeric",
			fieldHelp = "Numeric Field Help Text");

		WebContentStructures.addLocalization(
			locale = "pt-BR",
			localization1Name = "Nome da Estrutura WC");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "Grupo de Campos");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Numeric",
			fieldFieldLabelEdit = "Numérica");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Texto",
			fieldHelp = "Texto de ajuda do campo de texto");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Numérica",
			fieldHelp = "Texto de ajuda do campo numérico");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Fields Group",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Text,Numeric") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		for (var fieldFieldLabel : list "Text,Numeric") {
			AssertTextEquals(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT",
				value1 = "${fieldFieldLabel} Field Help Text");
		}

		PortletEntry.changeLocale(locale = "pt_BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Nome da Estrutura WC");

		AssertVisible(
			key_fieldFieldLabel = "Grupo de Campos",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Texto,Numérica") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Grupo de Campos",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		AssertTextEquals(
			key_fieldFieldLabel = "Texto",
			locator1 = "DDMEditStructure#SETTINGS_TEXT",
			value1 = "Texto de ajuda do campo de texto");

		AssertTextEquals(
			key_fieldFieldLabel = "Numérica",
			locator1 = "DDMEditStructure#SETTINGS_TEXT",
			value1 = "Texto de ajuda do campo numérico");
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "4"
	test DefaultTitleIsDisplayedUponLocaleChange {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Test",
			structureName = "Test");

		DataEngine.addField(
			fieldFieldLabel = "Text Test",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Text Test 2",
			fieldName = "Text",
			targetFieldLabel = "Text Test");

		WebContentStructures.saveCP(structureName = "Test");

		LexiconEntry.gotoEntry(rowEntry = "Test");

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Test");

		WebContentStructures.addName(structureName = "Test edited");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Test edited");

		PortletEntry.changeLocale(locale = "en-US");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Test");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContentStructures.saveCP();

		LexiconEntry.gotoEntry(rowEntry = "Test");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Test");

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Test edited");
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@ignore = "true"
	@priority = "4"
	test DefaultTitlePersistsAfterTranslatingForAnotherLocale {
		property portal.acceptance = "false";

		// TODO LPS-123536 DefaultTitlePersistsAfterTranslatingForAnotherLocale pending implementation
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "4"
	test DefaultTitlePersistsUponFirstlyTranslatingForAnotherLocale {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP();

		WebContentStructures.addLocalization(
			locale = "pt-BR",
			localization1Name = "Nome da Estrutura WC");

		WebContentStructures.addLocalization(
			locale = "en-US",
			localization1Name = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Date",
			fieldName = "Date",
			targetFieldLabel = "Text");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Fields Group",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Text,Date") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Nome da Estrutura WC");

		AssertVisible(
			key_fieldFieldLabel = "Fields Group",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Text,Date") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "4"
	test DuplicateTranslatedField {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Date",
			fieldName = "Date",
			targetFieldLabel = "Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Text",
			fieldHelp = "Text Field Help Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Date",
			fieldHelp = "Date Field Help Text");

		WebContentStructures.addLocalization(
			locale = "pt-BR",
			localization1Name = "Nome da Estrutura WC");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "Grupo de Campos");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Date",
			fieldFieldLabelEdit = "Encontro");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Texto",
			fieldHelp = "Texto de ajuda do campo de texto");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Encontro",
			fieldHelp = "Texto de ajuda do campo de data");

		DataEngine.duplicate(fieldsGroupLabel = "Grupo de Campos");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Fields Group",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Text,Date") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		AssertVisible(
			key_fieldFieldLabel = "Copy of Fields Group",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Copy of Text,Copy of Date") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Copy of Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		for (var fieldFieldLabel : list "Text,Date") {
			AssertTextEquals(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT",
				value1 = "${fieldFieldLabel} Field Help Text");
		}

		for (var fieldFieldLabel : list "Text,Date") {
			AssertTextEquals(
				key_fieldFieldLabel = "Copy of ${fieldFieldLabel}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT",
				value1 = "${fieldFieldLabel} Field Help Text");
		}

		PortletEntry.changeLocale(locale = "pt_BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Nome da Estrutura WC");

		AssertVisible(
			key_fieldFieldLabel = "Grupo de Campos",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Texto,Encontro") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Grupo de Campos",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		AssertVisible(
			key_fieldFieldLabel = "Copy of Grupo de Campos",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Copy of Texto,Copy of Encontro") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Copy of Grupo de Campos",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		for (var fieldFieldLabel : list "Texto,Copy of Texto") {
			AssertTextEquals(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT",
				value1 = "Texto de ajuda do campo de texto");
		}

		for (var fieldFieldLabel : list "Encontro,Copy of Encontro") {
			AssertTextEquals(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT",
				value1 = "Texto de ajuda do campo de data");
		}
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "5"
	test TranslateStructureWithAllFieldsNested {
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		NavItem.click(navItem = "Structures");

		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "Testing");

		DataEngine.addFields(fieldNameList = "Web Content,Date,Rich Text,Single Selection,Grid,Select from List");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric",
			targetFieldLabel = "Web Content");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Link to Page",
			fieldName = "Link to Page",
			targetFieldLabel = "Web Content");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Image",
			fieldName = "Image",
			targetFieldLabel = "Date");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Upload",
			fieldName = "Upload",
			targetFieldLabel = "Date");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Color",
			fieldName = "Color",
			targetFieldLabel = "Rich Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Text",
			fieldName = "Text",
			targetFieldLabel = "Single Selection");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Multiple Selection",
			fieldName = "Multiple Selection",
			targetFieldLabel = "Single Selection");

		var index = "1";
		for (var optionValue : list "Value 1,Value 2") {
			DataEngine.addFieldOption(
				fieldFieldLabel = "Multiple Selection",
				index = "${index}",
				optionValue = "${optionValue}");
			var index = ${index} + 1;
		}

		DataEngine.addFieldNested(
			fieldFieldLabel = "Geolocation",
			fieldName = "Geolocation",
			targetFieldLabel = "Grid");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Separator",
			fieldName = "Separator",
			targetFieldLabel = "Select from List");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContentStructures.addName(structureName = "Testando");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Text",
			label = "Texto");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Link to Page",
			label = "Link para Página");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Numeric",
			label = "Numérico");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Web Content",
			label = "Conteúdo Web");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Separator",
			label = "Separador");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Select from List",
			label = "Selecionar da Lista");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Image",
			label = "Imagem");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Rich Text",
			label = "Texto Completo");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Geolocation",
			label = "Localização Terrestre");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Single Selection",
			label = "Seleção Única");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Grid",
			label = "Grade");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Multiple Selection",
			label = "Seleção Múltipla");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Date",
			label = "Data");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Upload",
			label = "Enviar");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Color",
			label = "Cor");

		WebContentStructures.saveCP(structureName = "Testando");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Testing");

		PortletEntry.changeLocale(locale = "pt-BR");

		for (var key_fieldFieldLabel : list "Conteúdo Web,Numérico,Data,Enviar,Imagem,Texto Completo,Cor,Seleção Única,Seleção Múltipla,Texto,Grade,Localização Terrestre,Selecionar da Lista,Separador,Link para Página") {
			AssertTextEquals(
				key_fieldFieldLabel = "${key_fieldFieldLabel}",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL",
				value1 = "${key_fieldFieldLabel}");
		}
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "4"
	test TranslateStructureWithoutDefaultTitle {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP();

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Text",
			fieldHelp = "Text Field Help Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Date",
			fieldName = "Date",
			targetFieldLabel = "Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Date",
			fieldHelp = "Date Field Help Text");

		WebContentStructures.addLocalization(
			locale = "pt-BR",
			localization1Name = "Nome da Estrutura WC");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "Grupo de Campos");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Date",
			fieldFieldLabelEdit = "Encontro");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Texto",
			fieldHelp = "Texto de ajuda do campo de texto");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Encontro",
			fieldHelp = "Texto de ajuda do campo de data");

		PortletEntry.changeLocale(locale = "en-US");

		Button.clickSave();

		AssertElementPresent(locator1 = "TextInput#REQUIRED_ALERT");

		Alert.viewErrorMessage(errorMessage = "Please enter a valid title for the default language: en-US");

		WebContentStructures.addName(structureName = "WC Structure Name");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Fields Group",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Text,Date") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		for (var fieldFieldLabel : list "Text,Date") {
			AssertTextEquals(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT",
				value1 = "${fieldFieldLabel} Field Help Text");
		}

		PortletEntry.changeLocale(locale = "pt_BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Nome da Estrutura WC");

		AssertVisible(
			key_fieldFieldLabel = "Grupo de Campos",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Texto,Encontro") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Grupo de Campos",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		AssertTextEquals(
			key_fieldFieldLabel = "Texto",
			locator1 = "DDMEditStructure#SETTINGS_TEXT",
			value1 = "Texto de ajuda do campo de texto");

		AssertTextEquals(
			key_fieldFieldLabel = "Encontro",
			locator1 = "DDMEditStructure#SETTINGS_TEXT",
			value1 = "Texto de ajuda do campo de data");
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "5"
	test TranslationDoesNotChangeAnother {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric",
			targetFieldLabel = "Text");

		WebContentStructures.addLocalization(
			locale = "pt-BR",
			localization1Name = "Nome da Estrutura WC");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "Grupo de Campos");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Numeric",
			fieldFieldLabelEdit = "Numérica");

		WebContentStructures.addLocalization(
			locale = "de-DE",
			localization1Name = "Name der WC-Struktur");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "Feldgruppe");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "der Text");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Numeric",
			fieldFieldLabelEdit = "Numerisch");

		WebContentStructures.saveCP();

		WebContentStructures.viewCP(structureName = "WC Structure Name");

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Fields Group",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Text,Numeric") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		PortletEntry.changeLocale(locale = "pt_BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Nome da Estrutura WC");

		AssertVisible(
			key_fieldFieldLabel = "Grupo de Campos",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Texto,Numérica") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Grupo de Campos",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		PortletEntry.changeLocale(locale = "de-DE");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Name der WC-Struktur");

		AssertVisible(
			key_fieldFieldLabel = "Feldgruppe",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "der Text,Numerisch") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Feldgruppe",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "5"
	test TranslationPersistsAfterEditingAnother {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Text Box",
			fieldName = "Text",
			fieldType = "Multiple Lines",
			targetFieldLabel = "Text");

		WebContentStructures.addLocalization(
			locale = "pt-BR",
			localization1Name = "Nome da Estrutura WC");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "Grupo de Campos");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text Box",
			fieldFieldLabelEdit = "Caja de texto");

		WebContentStructures.addLocalization(
			locale = "de-DE",
			localization1Name = "Name der WC-Struktur");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "Feldgruppe");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "der Text");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text Box",
			fieldFieldLabelEdit = "Textfeld");

		WebContentStructures.saveCP();

		WebContentStructures.viewCP(structureName = "WC Structure Name");

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Fields Group",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Text,Text Box") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		PortletEntry.changeLocale(locale = "pt_BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Nome da Estrutura WC");

		AssertVisible(
			key_fieldFieldLabel = "Grupo de Campos",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Texto,Caja de texto") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Grupo de Campos",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		PortletEntry.changeLocale(locale = "de-DE");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Name der WC-Struktur");

		AssertVisible(
			key_fieldFieldLabel = "Feldgruppe",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "der Text,Textfeld") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Feldgruppe",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "5"
	test TranslationPersistsForTwoLevelNestedFields {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Rich Text",
			fieldName = "Rich Text",
			targetFieldLabel = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Date",
			fieldName = "Date",
			targetFieldLabel = "Rich Text");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "First Level Fields Group");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "Second Level Fields Group");

		WebContentStructures.addLocalization(
			locale = "pt-BR",
			localization1Name = "Nome da Estrutura WC");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "First Level Fields Group",
			fieldsGroupLabelEdit = "Grupo de campos de primeiro nível");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Second Level Fields Group",
			fieldsGroupLabelEdit = "Grupo de Campos de Segundo Nível");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Rich Text",
			fieldFieldLabelEdit = "Rico Texto");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Date",
			fieldFieldLabelEdit = "Encontro");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "WC Structure Name");

		for (var fieldsGroupLabel : list "First Level Fields Group,Second Level Fields Group") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldsGroupLabel}",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");
		}

		AssertVisible(
			key_fieldFieldLabel = "Text",
			key_fieldsGroupLabel = "First Level Fields Group",
			locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");

		for (var fieldFieldLabel : list "Rich Text,Date") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Second Level Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Nome da Estrutura WC");

		AssertVisible(
			key_fieldFieldLabel = "Texto",
			key_fieldsGroupLabel = "Grupo de campos de primeiro nível",
			locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");

		for (var fieldFieldLabel : list "Rico Texto,Encontro") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Grupo de Campos de Segundo Nível",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@priority = "5"
	test TranslationsRemainsUponSavingStructure {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric",
			targetFieldLabel = "Text");

		WebContentStructures.addLocalization(
			locale = "pt-BR",
			localization1Name = "Nome da Estrutura WC");

		DataEngine.editFieldsGroupLabel(
			fieldsGroupLabel = "Fields Group",
			fieldsGroupLabelEdit = "Grupo de Campos");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Numeric",
			fieldFieldLabelEdit = "Numérica");

		WebContentStructures.saveCP();

		WebContentStructures.viewCP(structureName = "WC Structure Name");

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Fields Group",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Text,Numeric") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Fields Group",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}

		PortletEntry.changeLocale(locale = "pt_BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Nome da Estrutura WC");

		AssertVisible(
			key_fieldFieldLabel = "Grupo de Campos",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		for (var fieldFieldLabel : list "Texto,Numérica") {
			AssertVisible(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldsGroupLabel = "Grupo de Campos",
				locator1 = "DataEngineBuilder#FORM_FIELD_NESTED");
		}
	}

	@description = "This is a test for LPS-123536. As Content Creator, I want to define reusable translations when creating WEM Structures with nested field"
	@ignore = "true"
	@priority = "4"
	test VerifyDefaultLanguageIsFirstShown {
		property portal.acceptance = "false";

		// TODO LPS-123536 VerifyDefaultLanguageIsFirstShown pending implementation
	}

}